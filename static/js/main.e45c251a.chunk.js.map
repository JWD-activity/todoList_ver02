{"version":3,"sources":["components/AddItem.js","components/ListItem.js","components/Footer.js","components/Header.js","components/Alert.js","components/Confirmation.js","MyList.js","index.js"],"names":["AddItem","state","userInput","changeHandler","e","setState","target","value","submitHandler","preventDefault","props","addTodo","className","onSubmit","this","type","placeholder","onChange","ref","focusRef","required","Component","ListItem","isChecked","checked","confirmHandler","id","showConfirm","todoItem","task","onClick","Footer","author","Header","heading","Alert","okHandler","alert","Confirmation","confirm","cancelHandler","MyList","createRef","toDos","theList","isAlert","confirmation","show","newTask","trim","current","blur","createId","removeTodo","currentTask","updatedToDos","filter","displayTodos","map","displayConfirm","displayAlert","checkConfirm","isConfirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e45c251a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class AddItem extends Component {\r\n  state = {\r\n    userInput: '',\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ userInput: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.userInput);\r\n    this.setState({ userInput: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='create'>\r\n        <form onSubmit={this.submitHandler}>\r\n          <input\r\n            type='text'\r\n            placeholder='Enter your task here.'\r\n            aria-label='add item'\r\n            onChange={this.changeHandler}\r\n            value={this.state.userInput}\r\n            ref={this.props.focusRef}\r\n            required\r\n          />\r\n          <button className='add-btn' type='submit'>\r\n            Add Task\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\r\n\r\nexport class ListItem extends Component {\r\n  state = {\r\n    isChecked: false,\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ isChecked: e.target.checked });\r\n  };\r\n\r\n  confirmHandler = (id) => {\r\n    this.props.showConfirm(id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='item'>\r\n        <input type='checkbox' onChange={this.changeHandler} />\r\n        <li>{this.props.todoItem.task}</li>\r\n        {this.state.isChecked && (\r\n          <button\r\n            className='delete-btn'\r\n            onClick={() => this.confirmHandler(this.props.todoItem.id)}\r\n          >\r\n            X\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        Made with ‚ù§ In Melbourne, Australia ‚Ä¢ Coded by {this.props.author}\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h1>{this.props.heading}</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Alert extends Component {\r\n  okHandler = () => {\r\n    this.props.alert(false);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='backdrop'>\r\n        <div className='alert'>\r\n          <h2>üòùWarning!</h2>\r\n          <h3>Please Enter Something.</h3>\r\n          <button className='ok-btn' onClick={this.okHandler}>\r\n            OK\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Confirmation extends Component {\r\n  okHandler = () => {\r\n    this.props.confirm(true);\r\n  };\r\n  cancelHandler = () => {\r\n    this.props.confirm(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='backdrop'>\r\n        <div className='confirm'>\r\n          <h2>üßê Confirm</h2>\r\n          <h3>Are you sure you want to delete the task?</h3>\r\n          <button onClick={this.okHandler} className='ok-btn'>\r\n            OK\r\n          </button>\r\n          <button onClick={this.cancelHandler} className='cancel-btn'>\r\n            CANCEL\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Confirmation;\r\n","import React, { Component, createRef } from 'react';\r\nimport { v4 as createId } from 'uuid';\r\nimport AddItem from './components/AddItem';\r\nimport ListItem from './components/ListItem';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport Alert from './components/Alert';\r\nimport Confirmation from './components/Confirmation';\r\n\r\nclass MyList extends Component {\r\n  focusRef = createRef();\r\n\r\n  state = {\r\n    toDos: this.props.theList,\r\n    isAlert: false,\r\n    confirmation: { show: false },\r\n  };\r\n\r\n  // Add a new task\r\n  addTodo = (newTask) => {\r\n    if (!newTask.trim()) {\r\n      this.setState({ isAlert: true });\r\n      this.focusRef.current.blur();\r\n      return;\r\n    }\r\n\r\n    const toDos = this.state.toDos;\r\n    const id = createId();\r\n    this.setState({ toDos: [{ id, task: newTask }, ...toDos] });\r\n  };\r\n\r\n  // Delete a task\r\n  removeTodo = () => {\r\n    const id = this.state.confirmation.currentTask;\r\n    const updatedToDos = this.state.toDos.filter((task) => task.id !== id);\r\n    this.setState({ toDos: updatedToDos });\r\n  };\r\n\r\n  // Display list of tasks\r\n  displayTodos = () => {\r\n    return this.state.toDos.map((task) => (\r\n      <ListItem\r\n        todoItem={task}\r\n        key={task.id}\r\n        showConfirm={this.displayConfirm}\r\n      />\r\n    ));\r\n  };\r\n\r\n  // Display alert message\r\n  displayAlert = (isAlert) => {\r\n    this.setState({ isAlert });\r\n  };\r\n\r\n  // Display confirmation message\r\n  displayConfirm = (id) => {\r\n    this.setState({\r\n      confirmation: { show: true, currentTask: id },\r\n    });\r\n  };\r\n\r\n  // Check the result of confirmation\r\n  checkConfirm = (isConfirm) => {\r\n    this.setState({ isAlert: false, confirmation: { show: false } });\r\n    // If Ok, delete the task\r\n    if (isConfirm) this.removeTodo();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.confirmation.show && (\r\n          <Confirmation confirm={this.checkConfirm} />\r\n        )}\r\n        {this.state.isAlert && <Alert alert={this.displayAlert} />}\r\n        <Header heading='Things I should stop procrastinating üòÄ' />\r\n        <main>\r\n          <AddItem addTodo={this.addTodo} focusRef={this.focusRef} />\r\n          <div className='list'>\r\n            <ul>{this.displayTodos()}</ul>\r\n          </div>\r\n        </main>\r\n        <Footer author='Jinok' />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyList;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyList from './MyList';\nimport './index.css';\n\n// const toDos = ['Buy ice cream.', 'Eat ice cream.', 'Go to the gym.'];\n\nconst toDos = [\n  { id: 123, task: 'Buy ice cream' },\n  { id: 456, task: 'Eat ice cream' },\n  { id: 789, task: 'Go to the gym.' },\n];\n\nReactDOM.render(<MyList theList={toDos} />, document.getElementById('root'));\n"],"sourceRoot":""}